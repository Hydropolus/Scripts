#!/data/data/com.termux/files/usr/bin/bash
# in ~/.bashrc: alias telexin="minimodem -r -q 1200 --print-filter >>~/telexRead.txt"

appTest(){
[[ -z $(command -v xxh32sum) ]] && { echo "xxh32sum? Paket XXHASH installieren."; exit; }
[[ -z $(command -v base91) ]] && { echo "base91? Programm BASE91 compilieren."; exit; }
[[ -z $(command -v file) ]] && { echo "file? Paket FILE installieren."; exit; }; }

info(){
echo "Telex  DateiName [z] [Baud] [Modem-SteuerParameter]           Version 1.6"
echo "TELEX: Dienstprogramm für MINIMODEM zum bequemen akustischen Dateiversand"
echo "       Der Dateiname muss der erste Parameter sein. Die anderen werden an"
echo "       MINIMODEM unverändert durchgereicht. Ohne Parameter  wird mit 1200"
echo "       Baud im  Format BELL-202 bei 48 kHz Samplingrate gesendet.  Binäre"
echo "       Dateien werden erkannt und als ein selbstdekodierendes Shellskript"
echo "       base32/64/92 codiert versandt. “z” xzippt die Datei zuvor und läßt"
echo "       sie ebenfalls vom Skript dekomprimieren."; }

delay(){
echo; for ((tmr=$1; tmr>-1; tmr=tmr-1)); do
   echo -e "\033[1A\033[0;33mCarrier in $tmr Sekunden\033[0m"; sleep 1
done; }

txtTelex(){
echo "+++++ Minimodem Telegramm +++++++" >>$wvtxt
echo "+++++ Versandzeit: $(date)"        >>$wvtxt
echo "+++++ Sendeparameter: $cli"        >>$wvtxt
echo "+++++ Dateiname: $datei"           >>$wvtxt
echo                                     >>$wvtxt
cat $datei                               >>$wvtxt
echo                                     >>$wvtxt
echo "++++++ Telex Telegramm Ende +++++" >>$wvtxt; }

binTelex(){                                                                                    echo >$wvtxt; echo >>$wvtxt
echo "#!/usr/bin/bash"                   >>$wvtxt
echo "# +++++ Minimodem Telegramm +++++" >>$wvtxt
echo "# Versandzeit: $(date)"            >>$wvtxt
echo "# Automatic decoding shell script" >>$wvtxt
echo "cat << EOF | $baseX -d -i >$datei" >>$wvtxt
cat $datei | $baseX                      >>$wvtxt
echo "EOF"                               >>$wvtxt
echo "chksend=$chksum"                   >>$wvtxt
echo "chkrecv=\$($chckX $datei |awk '{print \$1}')"        >>$wvtxt
echo '[ $chkrecv != $chksend ] && echo Checksummenfehler!' >>$wvtxt
echo "z=$z; [ -z \$z ] || unxz $datei"                     >>$wvtxt
echo "# +++++++++++++ Telex Telegramm Ende ++++++++++++++" >>$wvtxt; }

[[ -e $1 ]] || { echo "Datei nicht gefunden"; info; exit; } && { datei=$1; shift; }
[[ $1 == "z" ]] && { shift; xz -9vc $datei >$datei.xz; datei=$datei.xz; z=1; }

#appTest
baseX=base64
chckX=sha1sum
wvdat=$TEMP/MiMo$$.wav
wvtxt=$TEMP/MiMo$$.txt
player=termux-media-player
cli="$@"; [[ -z $cli ]] && cli=1200
chksum=$($chckX $datei |awk '{print $1}')

[[ -z $(file $datei |grep text) ]] && binTelex || txtTelex

cat $wvtxt |minimodem -f $wvdat -t $cli
[[ -z $z ]] || { echo "  XZ-komprimiert zu $datei"; rm $datei; }
echo "Send Text: $(stat -c%s $wvtxt) Bytes"
echo "Send Wave: $(ls -sh $wvdat |awk '{print $1}')"
echo "Wave $( ffprobe -hide_banner $wvdat 2>&1 |grep Duration)"
echo "      $(ffprobe -hide_banner $wvdat 2>&1 |grep Audio |awk -F, '{print $3,$2,$4,$5}')"

delay 3; $player play $wvdat
echo -e "\033[0;33mTonausgabe abbrechen mit [ESC]-Taste.\033[0m"; echo
while [[ -z $($player info |grep No) ]]; do
   echo -e "\033[1ATransmitting: $($player info |grep Current |awk '{print $3, $4, $5}')"
   read -n1 -t1 -r key; [[ $key == $'\033' ]] && { $player stop; break; }
done

